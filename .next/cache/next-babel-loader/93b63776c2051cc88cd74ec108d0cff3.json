{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nuri\\\\Desktop\\\\development\\\\pages\\\\new.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 1px solid black;\\n    height: 30px;\\n    width: 70px;\\n    font-weight: bold;\\n    margin-top: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Box } from 'reflexbox';\nimport styled from '@emotion/styled';\nimport { Label, Input, Textarea } from '@rebass/forms';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nvar New = function New() {\n  _s();\n\n  var API_URL = process.env.API_URL;\n\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(\"\".concat(API_URL, \"/posts\"), {\n      post_title: title,\n      description: description\n    }).then(function (response) {\n      console.log(response);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(Box, {\n    variant: \"formContainer\",\n    as: \"form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Create a Post\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(Label, {\n    htmlFor: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Title\"), __jsx(Input, {\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: function onChange(event) {\n      return setTitle(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }), __jsx(Label, {\n    htmlFor: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Description\"), __jsx(Textarea, {\n    id: \"description\",\n    name: \"description\",\n    type: \"text\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), __jsx(ButtonStyled, {\n    type: \"submit\",\n    variant: \"submitButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Post\"));\n};\n\n_s(New, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n\n_c = New;\nvar ButtonStyled = styled.button(_templateObject());\n_c2 = ButtonStyled;\nexport default New;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"New\");\n$RefreshReg$(_c2, \"ButtonStyled\");","map":{"version":3,"sources":["C:/Users/nuri/Desktop/development/pages/new.js"],"names":["Box","styled","Label","Input","Textarea","useState","axios","New","API_URL","process","env","title","setTitle","description","setDescription","handleSubmit","event","preventDefault","post","post_title","then","response","console","log","error","target","value","ButtonStyled","button"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,eAAvC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,MACNC,OADM,GACMC,OAAO,CAACC,GADd,CACNF,OADM;;AAAA,kBAGYH,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGPM,KAHO;AAAA,MAGAC,QAHA;;AAAA,mBAIwBP,QAAQ,CAAC,EAAD,CAJhC;AAAA,MAIPQ,WAJO;AAAA,MAIMC,cAJN;;AAMd,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,KAAK,CAACY,IAAN,WAAcV,OAAd,aAA+B;AAC3BW,MAAAA,UAAU,EAAER,KADe;AAE3BE,MAAAA,WAAW,EAAEA;AAFc,KAA/B,EAIGO,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KANH,WAOS,UAAUG,KAAV,EAAiB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KATH;AAUH,GAbD;;AAeA,SACI,MAAC,GAAD;AAAK,IAAA,OAAO,EAAG,eAAf;AAA+B,IAAA,EAAE,EAAG,MAApC;AAA2C,IAAA,QAAQ,EAAIT,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAIQ,MAAC,KAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAIJ,KAJb;AAKI,IAAA,QAAQ,EAAI,kBAACK,KAAD;AAAA,aAAWJ,QAAQ,CAACI,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAnB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAUU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVV,EAWQ,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXR,EAYY,MAAC,QAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAIb,WAJb;AAKI,IAAA,QAAQ,EAAI,kBAACG,KAAD;AAAA,aAAWF,cAAc,CAACE,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAzB;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZZ,EAmBQ,MAAC,YAAD;AAAc,IAAA,IAAI,EAAG,QAArB;AAA8B,IAAA,OAAO,EAAG,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBR,CADJ;AAuBH,CA5CD;;GAAMnB,G;;KAAAA,G;AA+CN,IAAMoB,YAAY,GAAG1B,MAAM,CAAC2B,MAAV,mBAAlB;MAAMD,Y;AAQN,eAAepB,GAAf","sourcesContent":["import { Box } from 'reflexbox'\r\nimport styled from '@emotion/styled'\r\nimport { Label, Input, Textarea } from '@rebass/forms'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst New = () => {\r\n    const { API_URL } = process.env\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios.post(`${API_URL}/posts`, {\r\n            post_title: title,\r\n            description: description\r\n          })\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    return(\r\n        <Box variant = \"formContainer\" as = \"form\" onSubmit = {handleSubmit}>\r\n            <h2>Create a Post</h2>\r\n            <br/>\r\n            <Label htmlFor='title'>Title</Label>\r\n                <Input\r\n                    id='title'\r\n                    name='title'\r\n                    type='text'\r\n                    value = {title}\r\n                    onChange = {(event) => setTitle(event.target.value)}\r\n                /><br />\r\n                <Label htmlFor='description'>Description</Label>\r\n                    <Textarea\r\n                        id='description'\r\n                        name='description'\r\n                        type='text'\r\n                        value = {description}\r\n                        onChange = {(event) => setDescription(event.target.value)}\r\n                    />\r\n                <ButtonStyled type = \"submit\" variant = \"submitButton\">Post</ButtonStyled>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst ButtonStyled = styled.button`\r\n    border: 1px solid black;\r\n    height: 30px;\r\n    width: 70px;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n`\r\n\r\nexport default New"]},"metadata":{},"sourceType":"module"}