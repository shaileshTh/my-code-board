{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nuri\\\\Desktop\\\\development\\\\pages\\\\posts\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { Box } from 'reflexbox';\nimport SingleCard from '../../components/SingleCard';\n\nconst Post = ({\n  post\n}) => {\n  const handleDelete = async () => {\n    const {\n      API_URL\n    } = process.env;\n    const res = await fetch(`${API_URL}/posts/${id}`, {\n      method: 'DELETE'\n    });\n    const data = await res.json();\n    Router.back();\n  };\n\n  return __jsx(Box, {\n    variant: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: {\n      _: \"100%\",\n      md: \"80%\"\n    },\n    variant: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(SingleCard, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Delete\")));\n};\n\nexport async function getStaticPaths() {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/posts/`);\n  const posts = await res.json();\n  const paths = posts.map(post => ({\n    params: {\n      id: post.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/posts/${params.id}`);\n  const post = await res.json();\n  return {\n    props: {\n      post\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["C:/Users/nuri/Desktop/development/pages/posts/[id].js"],"names":["fetch","Router","Box","SingleCard","Post","post","handleDelete","API_URL","process","env","res","id","method","data","json","back","_","md","getStaticPaths","posts","paths","map","params","toString","fallback","getStaticProps","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAErB,QAAMC,YAAY,GAAG,YAAY;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAcC,OAAO,CAACC,GAA5B;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAAE,GAAEO,OAAQ,UAASI,EAAG,EAAxB,EAA2B;AAC9CC,MAAAA,MAAM,EAAE;AADsC,KAA3B,CAAvB;AAGA,UAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAb,IAAAA,MAAM,CAACc,IAAP;AACH,GAPD;;AASA,SACI,MAAC,GAAD;AAAK,IAAA,OAAO,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,KAAK,EAAI;AAACC,MAAAA,CAAC,EAAE,MAAJ;AAAYC,MAAAA,EAAE,EAAE;AAAhB,KAAd;AAAsC,IAAA,OAAO,EAAG,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAIZ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ;AAQH,CAnBD;;AAqBA,OAAO,eAAeY,cAAf,GAA+B;AAClC,QAAM;AAAEX,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAE,GAAEO,OAAQ,SAAZ,CAAvB;AACA,QAAMY,KAAK,GAAG,MAAMT,GAAG,CAACI,IAAJ,EAApB;AAEA,QAAMM,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAWhB,IAAD,KAAW;AAC/BiB,IAAAA,MAAM,EAAE;AAAEX,MAAAA,EAAE,EAAEN,IAAI,CAACM,EAAL,CAAQY,QAAR;AAAN;AADuB,GAAX,CAAV,CAAd;AAIA,SAAM;AAAEH,IAAAA,KAAF;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAN;AACH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAAyC;AAC5C,QAAM;AAAEf,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAE,GAAEO,OAAQ,UAASe,MAAM,CAACX,EAAG,EAA/B,CAAvB;AACA,QAAMN,IAAI,GAAG,MAAMK,GAAG,CAACI,IAAJ,EAAnB;AAEA,SAAO;AAAEY,IAAAA,KAAK,EAAE;AAAErB,MAAAA;AAAF;AAAT,GAAP;AACH;AAED,eAAeD,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport Router from 'next/router'\r\nimport { Box } from 'reflexbox'\r\nimport SingleCard from '../../components/SingleCard'\r\n\r\nconst Post = ({post}) => { \r\n\r\n    const handleDelete = async () => {\r\n        const { API_URL } = process.env\r\n        const res = await fetch(`${API_URL}/posts/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const data = await res.json();\r\n        Router.back();\r\n    }\r\n\r\n    return (\r\n        <Box variant = \"container\">\r\n            <Box width = {{_: \"100%\", md: \"80%\"}} variant = \"post\">\r\n                <SingleCard post = {post} />\r\n                <button onClick={handleDelete}>Delete</button>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const { API_URL } = process.env\r\n    const res = await fetch(`${API_URL}/posts/`);\r\n    const posts = await res.json();\r\n\r\n    const paths = posts.map((post) => ({\r\n        params: { id: post.id.toString() }\r\n    }))\r\n\r\n    return{ paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params }){\r\n    const { API_URL } = process.env;\r\n    const res = await fetch(`${API_URL}/posts/${params.id}`);\r\n    const post = await res.json();\r\n\r\n    return { props: { post } }\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}